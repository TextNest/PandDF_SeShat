// ============================================
// üìÑ 6. src/components/faq/FAQCard/FAQCard.tsx
// ============================================

'use client';

import { useState } from 'react';
import { ChevronDown, ChevronUp, Eye, ThumbsUp, Sparkles, Edit, Trash2 } from 'lucide-react';
import { FAQ } from '@/types/faq.types';
import { formatRelativeTime } from '@/lib/utils/format';
import styles from './FAQCard.module.css';

interface FAQCardProps {
  faq: FAQ;
}

export default function FAQCard({ faq }: FAQCardProps) {
  const [isExpanded, setIsExpanded] = useState(false);

  return (
    <div className={styles.card}>
      <div className={styles.header} onClick={() => setIsExpanded(!isExpanded)}>
        <div className={styles.headerContent}>
          <div className={styles.titleRow}>
            <h3 className={styles.question}>{faq.question}</h3>
            {faq.isAutoGenerated && (
              <span className={styles.aiBadge}>
                <Sparkles size={14} />
                AI
              </span>
            )}
          </div>
          <div className={styles.meta}>
            {faq.category && (
              <span className={styles.category}>{faq.category}</span>
            )}
            {faq.productName && (
              <span className={styles.product}>{faq.productName}</span>
            )}
            <span className={`${styles.status} ${styles[faq.status]}`}>
              {faq.status === 'published' ? 'Í≤åÏãúÎê®' : 'ÏûÑÏãúÏ†ÄÏû•'}
            </span>
          </div>
        </div>
        <button className={styles.expandButton}>
          {isExpanded ? <ChevronUp size={20} /> : <ChevronDown size={20} />}
        </button>
      </div>

      {isExpanded && (
        <div className={styles.body}>
          <div className={styles.answer}>
            <p>{faq.answer}</p>
          </div>

          {faq.tags && faq.tags.length > 0 && (
            <div className={styles.tags}>
              {faq.tags.map((tag, index) => (
                <span key={index} className={styles.tag}>
                  #{tag}
                </span>
              ))}
            </div>
          )}

          <div className={styles.stats}>
            <div className={styles.statItem}>
              <Eye size={16} />
              <span>{faq.viewCount}</span>
            </div>
            <div className={styles.statItem}>
              <ThumbsUp size={16} />
              <span>{faq.helpfulCount}</span>
            </div>
            <div className={styles.statItem}>
              <span className={styles.date}>
                {formatRelativeTime(faq.updatedAt)}
              </span>
            </div>
          </div>

          <div className={styles.actions}>
            <button className={styles.actionButton}>
              <Edit size={16} />
              ÏàòÏ†ï
            </button>
            <button className={`${styles.actionButton} ${styles.danger}`}>
              <Trash2 size={16} />
              ÏÇ≠Ï†ú
            </button>
          </div>
        </div>
      )}
    </div>
  );
}